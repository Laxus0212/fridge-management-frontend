paths:
  /families:
    get:
      tags:
        - Family
      summary: Get all families
      operationId: getAllFamilies
      responses:
        '200':
          description: List of families
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    - familyId: 1
                      familyName: "Smith"
                      invitationCode: "ABC123"
                    - familyId: 2
                      familyName: "Johnson"
                      invitationCode: "XYZ789"
    post:
      tags:
        - Family
      summary: Create a new family
      operationId: createFamily
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/family.yaml#/components/schemas/CreateFamilyReq'
            examples:
              example1:
                value:
                  familyName: "Doe"
      responses:
        '201':
          description: Family created successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    familyId: 3
                    familyName: "Doe"
                    invitationCode: "LMN456"

  /families/{familyId}:
    get:
      tags:
        - Family
      summary: Get family by ID
      operationId: getFamilyById
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Family details
          content:
            application/json:
              schema:
                $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    familyId: 1
                    familyName: "Smith"
                    invitationCode: "ABC123"
    put:
      tags:
        - Family
      summary: Update family
      operationId: updateFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/family.yaml#/components/schemas/Family'
            examples:
              example1:
                value:
                  familyId: 1
                  familyName: "Smith Updated"
                  invitationCode: "ABC123"
      responses:
        '200':
          description: Family updated successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    familyId: 1
                    familyName: "Smith Updated"
                    invitationCode: "ABC123"
    delete:
      tags:
        - Family
      summary: Delete family
      operationId: deleteFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Family deleted successfully

  /families/{familyId}/users:
    get:
      tags:
        - Family
      summary: Get family members
      operationId: getFamilyMembers
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: List of family members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../interfaces/user.yaml#/components/schemas/FamilyMember'
              examples:
                example1:
                  value:
                    - userId: 1
                      username: "John Doe"
                      familyId: 1
                    - userId: 2
                      username: "Jane Doe"
                      familyId: 1

  /families/{familyId}/invite:
    post:
      tags:
        - Family
      summary: Invite a user to the family
      operationId: inviteUserToFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
          description: The ID of the family to which the user is invited.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/invitation.yaml#/components/schemas/CreateInvitationReq'
            examples:
              example1:
                value:
                  invitedUserId: 2
      responses:
        '200':
          description: Invitation sent successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/invitation.yaml#/components/schemas/Invitation'
              examples:
                example1:
                  value:
                    invitationId: 1
                    familyId: 1
                    invitedUserId: 2
                    status: "pending"
        '400':
          description: Invalid request (e.g., user already in the family)
        '404':
          description: Family or user not found

  /families/invites/{userId}:
    get:
      tags:
        - Family
      summary: Get pending invites for a user
      operationId: getPendingInvites
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the user to fetch pending invites for.
      responses:
        '200':
          description: List of pending invites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../interfaces/invitation.yaml#/components/schemas/Invitation'
              examples:
                example1:
                  value:
                    - invitationId: 1
                      familyId: 1
                      invitedUserId: 2
                      status: "pending"
                      family:
                        familyId: 1
                        familyName: "Smith Family"
                      invitedUser:
                        userId: 2
                        username: "user@example.com"
        '404':
          description: No pending invites found

  /families/invites/{inviteId}/accept:
    post:
      tags:
        - Family
      summary: Accept a family invite
      operationId: acceptInvite
      parameters:
        - in: path
          name: inviteId
          schema:
            type: integer
          required: true
          description: The ID of the invitation to accept.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/invitation.yaml#/components/schemas/UpdateInvitationReq'
            examples:
              example1:
                value:
                  status: "accepted"
      responses:
        '200':
          description: Invitation accepted successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/invitation.yaml#/components/schemas/Invitation'
              examples:
                example1:
                  value:
                    invitationId: 1
                    familyId: 1
                    invitedUserId: 2
                    status: "accepted"
        '404':
          description: Invitation not found

  /families/invites/{inviteId}/decline:
    post:
      tags:
        - Family
      summary: Decline a family invite
      operationId: declineInvite
      parameters:
        - in: path
          name: inviteId
          schema:
            type: integer
          required: true
          description: The ID of the invitation to decline.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/invitation.yaml#/components/schemas/UpdateInvitationReq'
            examples:
              example1:
                value:
                  status: "declined"
      responses:
        '200':
          description: Invitation declined successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/invitation.yaml#/components/schemas/Invitation'
              examples:
                example1:
                  value:
                    invitationId: 1
                    familyId: 1
                    invitedUserId: 2
                    status: "declined"
        '404':
          description: Invitation not found

  /families/{familyId}/leave:
    post:
      tags:
        - Family
      summary: Leave a family
      operationId: leaveFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
              required:
                - userId
      responses:
        '200':
          description: Successfully left the family
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example1:
                  value:
                    message: "Successfully left the family"
        '400':
          description: Invalid request (e.g., user not in the family)
        '404':
          description: Family not found
