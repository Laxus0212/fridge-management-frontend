paths:
  /families:
    get:
      tags:
        - Family
      summary: Get all families
      operationId: getAllFamilies
      responses:
        '200':
          description: List of families
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    - family_id: 1
                      family_name: "Smith"
                      invitation_code: "ABC123"
                    - family_id: 2
                      family_name: "Johnson"
                      invitation_code: "XYZ789"
    post:
      tags:
        - Family
      summary: Create a new family
      operationId: createFamily
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/family.yaml#/components/schemas/CreateFamilyReq'
            examples:
              example1:
                value:
                  family_name: "Doe"
      responses:
        '201':
          description: Family created successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    family_id: 3
                    family_name: "Doe"
                    invitation_code: "LMN456"

  /families/{familyId}:
    get:
      tags:
        - Family
      summary: Get family by ID
      operationId: getFamilyById
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Family details
          content:
            application/json:
              schema:
                $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    family_id: 1
                    family_name: "Smith"
                    invitation_code: "ABC123"
    put:
      tags:
        - Family
      summary: Update family
      operationId: updateFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/family.yaml#/components/schemas/Family'
            examples:
              example1:
                value:
                  family_id: 1
                  family_name: "Smith Updated"
                  invitation_code: "ABC123"
      responses:
        '200':
          description: Family updated successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/family.yaml#/components/schemas/Family'
              examples:
                example1:
                  value:
                    family_id: 1
                    family_name: "Smith Updated"
                    invitation_code: "ABC123"
    delete:
      tags:
        - Family
      summary: Delete family
      operationId: deleteFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Family deleted successfully

  /families/{familyId}/invite:
    post:
      tags:
        - Family
      summary: Invite a user to the family
      operationId: inviteUserToFamily
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The email of the user to invite
              required:
                - email
            examples:
              example1:
                value:
                  email: "user@example.com"
      responses:
        '200':
          description: Invitation sent successfully
        '400':
          description: Invalid request
        '404':
          description: Family not found

  /families/{familyId}/users:
    get:
      tags:
        - Family
      summary: Get family members
      operationId: getFamilyMembers
      parameters:
        - in: path
          name: familyId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: List of family members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../interfaces/user.yaml#/components/schemas/FamilyMember'
              examples:
                example1:
                  value:
                    - user_id: 1
                      user_name: "John Doe"
                      family_id: 1
                    - user_id: 2
                      user_name: "Jane Doe"
                      family_id: 1
