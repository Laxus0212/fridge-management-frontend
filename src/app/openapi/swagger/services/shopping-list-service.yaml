paths:
  /shopping-lists:
    post:
      tags:
        - ShoppingList
      summary: Create a new shopping list
      operationId: createShoppingList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingList'
      responses:
        '201':
          description: Shopping list created successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingList'
              examples:
                example1:
                  value:
                    listId: 1
                    name: "Grocery"
                    items: [
                      {
                        itemId: 1,
                        listId: 1,
                        productName: "Bread",
                        quantity: 2,
                        unit: "pcs"
                      },
                      {
                        itemId: 2,
                        listId: 1,
                        productName: "Milk",
                        quantity: 1,
                        unit: "l"
                      }
                    ]
                    familyId: 1

  /shopping-lists/{listId}:
    put:
      tags:
        - ShoppingList
      summary: Update a shopping list
      operationId: updateShoppingList
      parameters:
        - name: listId
          in: path
          required: true
          description: ID of the shopping list to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingList'
      responses:
        '200':
          description: Shopping list updated successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingList'
        '400':
          description: Invalid input supplied
        '404':
          description: Shopping list not found
    delete:
      tags:
        - ShoppingList
      summary: Delete a shopping list
      operationId: deleteShoppingList
      parameters:
        - name: listId
          in: path
          required: true
          description: ID of the shopping list to delete
          schema:
            type: integer
      responses:
        '204':
          description: Shopping list deleted successfully
        '404':
          description: Shopping list not found

  /shopping-lists/{listId}/items:
    post:
      tags:
        - ShoppingList
      summary: Add item to shopping list
      operationId: addItemToShoppingList
      parameters:
        - name: listId
          in: path
          required: true
          description: ID of the shopping list
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingListItem'
      responses:
        '201':
          description: Item added to shopping list
          content:
            application/json:
              schema:
                $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingListItem'
              examples:
                example1:
                  value:
                    itemId: 1
                    listId: 1
                    productName: "Bread"
                    quantity: 2
                    unit: "pcs"

  /shopping-lists/{listId}/items/{itemId}:
    put:
      tags:
        - ShoppingList
      summary: Update a shopping list item
      operationId: updateShoppingListItem
      parameters:
        - name: listId
          in: path
          required: true
          description: ID of the shopping list containing the item
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          description: ID of the item to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingListItem'
      responses:
        '200':
          description: Shopping list item updated successfully
          content:
            application/json:
              schema:
                $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingListItem'
        '400':
          description: Invalid input supplied
        '404':
          description: Shopping list or item not found
    delete:
      tags:
        - ShoppingList
      summary: Delete a shopping list item
      operationId: deleteShoppingListItem
      parameters:
        - name: listId
          in: path
          required: true
          description: ID of the shopping list containing the item
          schema:
            type: integer
        - name: itemId
          in: path
          required: true
          description: ID of the item to delete
          schema:
            type: integer
      responses:
        '204':
          description: Shopping list item deleted successfully
        '404':
          description: Shopping list or item not found

  /shopping-lists/{userId}/user-shopping-lists:
    get:
      tags:
        - ShoppingList
      summary: Get shopping lists by user ID
      description: Returns a list of shopping lists for the user, filtered by user ID.
      operationId: getShoppingListsByUserId
      parameters:
        - name: userId
          in: path
          description: The user ID to filter shopping lists by. If not provided, returns all lists for the user.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of shopping lists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../interfaces/shopping-list.yaml#/components/schemas/ShoppingList'
              examples:
                example1:
                  value:
                    - listId: 1
                      name: "Grocery"
                      items: [
                      {
                        itemId: 1,
                        listId: 1,
                        productName: "Bread",
                        quantity: 2,
                        unit: "pcs"
                      },
                      {
                        itemId: 2,
                        listId: 1,
                        productName: "Milk",
                        quantity: 1,
                        unit: "l"
                      }
                    ]
                    - familyId: 1,
                      listId: 2
                      name: "Hardware store"
                      items: [
                      {
                        itemId: 3,
                        listId: 2,
                        productName: "Screwdriver",
                        quantity: 1,
                        unit: "pcs"
                      },
                      {
                        itemId: 4,
                        listId: 2,
                        productName: "Hammer",
                        quantity: 1,
                        unit: "pcs"
                      }
                    ]
        '400':
          description: Invalid user ID supplied
        '404':
          description: No shopping lists found
